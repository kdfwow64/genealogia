diff --git a/node_modules/@enso-ui/ui/src/bulma/components/AppFooter.vue b/node_modules/@enso-ui/ui/src/bulma/components/AppFooter.vue
index cfb133c..e39d28f 100644
--- a/node_modules/@enso-ui/ui/src/bulma/components/AppFooter.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/components/AppFooter.vue
@@ -4,6 +4,12 @@
             <footer class="footer">
                 <div class="content has-text-centered">
                     <div class="level">
+                                                <div class="level-item">
+                                                    <a class="button is-link" href="/contact">Contact</a>&nbsp;
+                                                    <a class="button is-link" href="/about">About</a>&nbsp;
+                                                    <a class="button is-link" href="/privacy">Privacy</a>&nbsp;
+                                                    <a class="button is-link" href="/termsandconditions">Terms and Conditions</a>
+                                                </div>
                         <div class="level-item">
                             <strong class="has-margin-right-small">
                                 {{ meta.appName }} v{{ meta.version }}
@@ -15,6 +21,14 @@
                             <span class="has-margin-left-small">
                                 +
                             </span>
+                                                        <a href="https://github.com/laravel-enso/enso"
+                                                                                            target="_blank">
+                                                            <img src="/images/enso.svg"
+                                                                                                      alt="Made with Laravel Enso"
+                                                                                                      width="28"
+                                                                                                      height="28">
+                                                        </a>
+							+
                             <a href="https://vuejs.org"
                                 target="_blank">
                                 <img src="/images/vue-badge.png"
@@ -43,19 +57,8 @@
                             </a>
                         </div>
                     </div>
-                    <div class="level">
-                        <div class="level-item">
-                            <strong>Backed by:</strong>
-                            <a href="https://earthlink.ro"
-                                target="_blank">
-                                <figure class="image earthlink">
-                                    <img src="/images/earthlink.svg">
-                                </figure>
-                            </a>
-                        </div>
-                    </div>
                     <div>
-                        <a href="https://github.com/laravel-enso/enso"
+                        <a href="https://github.com/modularsoftware/genealogy"
                             target="_blank">
                             <span class="icon">
                                 <fa :icon="['fab', 'github']"/>
diff --git a/node_modules/@enso-ui/ui/src/bulma/components/navbar/AppUpdate.vue b/node_modules/@enso-ui/ui/src/bulma/components/navbar/AppUpdate.vue
index c93f97a..564d0b0 100644
--- a/node_modules/@enso-ui/ui/src/bulma/components/navbar/AppUpdate.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/components/navbar/AppUpdate.vue
@@ -11,7 +11,7 @@
 </template>
 
 <script>
-import { mapState, mapMutations, mapGetters } from 'vuex';
+import { mapState, mapActions, mapGetters } from 'vuex';
 import { VTooltip } from 'v-tooltip';
 import { library } from '@fortawesome/fontawesome-svg-core';
 import { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';
@@ -23,10 +23,10 @@ export default {
 
     directives: { tooltip: VTooltip },
 
-    inject: ['i18n'],
+    inject: ['i18n', 'toastr'],
 
     data: () => ({
-        tooltip: null
+        tooltip: null,
     }),
 
     computed: {
@@ -41,13 +41,13 @@ export default {
     },
 
     methods: {
-        ...mapMutations('websockets', ['connect']),
+        ...mapActions('websockets', ['connect']),
         listen() {
             window.Echo.private(this.appUpdates)
                 .listen('.new-update', ({ title, message, tooltip }) => {
                     this.tooltip = this.i18n(tooltip);
 
-                    this.$toastr.duration(30000)
+                    this.toastr.duration(30000)
                         .title(this.i18n(title))
                         .warning(this.i18n(message));
                 });
diff --git a/node_modules/@enso-ui/ui/src/bulma/components/navbar/NavbarRefresh.vue b/node_modules/@enso-ui/ui/src/bulma/components/navbar/NavbarRefresh.vue
new file mode 100644
index 0000000..7790ef3
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/components/navbar/NavbarRefresh.vue
@@ -0,0 +1,44 @@
+<template>
+    <vue-pull-refresh
+        :config="config"
+        :on-refresh="refresh">
+        <navbar class="animated slideInDown"/>
+    </vue-pull-refresh>
+</template>
+
+<script>
+
+import VuePullRefresh from 'vue-pull-refresh';
+import Navbar from './Navbar.vue';
+
+export default {
+    name: 'NavbarRefresh',
+
+    components: {
+        VuePullRefresh, Navbar,
+    },
+
+    inject: ['i18n'],
+
+    data: v => ({
+        config: {
+            startLabel: v.i18n('Pull down to refresh'),
+            readyLabel: v.i18n('Release to refresh'),
+            loadingLabel: v.i18n('Refreshing...'),
+            errorLabel: v.i18n('Something wrong happened'),
+        },
+    }),
+
+    methods: {
+        refresh() {
+            return new Promise(() => window.location.reload(true));
+        },
+    },
+};
+</script>
+
+<style>
+    .pull-down-header {
+        z-index: 1000;
+    }
+</style>
diff --git a/node_modules/@enso-ui/ui/src/bulma/components/navbar/io/Operation.vue b/node_modules/@enso-ui/ui/src/bulma/components/navbar/io/Operation.vue
index 0c83526..3fdaa3c 100644
--- a/node_modules/@enso-ui/ui/src/bulma/components/navbar/io/Operation.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/components/navbar/io/Operation.vue
@@ -1,18 +1,14 @@
 <template>
     <core-operation v-bind="$attrs">
-        <template v-slot:default="{ operation, since, isIn, avatar }">
+        <template v-slot:default="{ operation, since, isIn }">
             <div class="navbar-content">
                 <div class="is-operation">
                     <div class="level is-marginless">
                         <div class="level-left">
                             <div class="level-item">
-                                <figure v-tooltip.left-start="operation.owner.name"
-                                    class="media">
-                                    <p class="image is-16x16">
-                                        <img class="is-rounded"
-                                            :src="avatar(operation.owner)">
-                                    </p>
-                                </figure>
+                                <avatar v-tooltip.left-start="operation.owner.name"
+                                    class="media  is-16x16"
+                                    :user="operation.owner"/>
                                 <span v-tooltip.left-start="
                                         `${i18n('file')}: ${operation.name}, ${i18n('elapsed time')}: ${since(operation.since)}`
                                     "
@@ -50,6 +46,7 @@ import { library } from '@fortawesome/fontawesome-svg-core';
 import { faDatabase, faCaretLeft, faCaretRight } from '@fortawesome/free-solid-svg-icons';
 import { VTooltip } from 'v-tooltip';
 import CoreOperation from '../../../../core/components/navbar/io/Operation.vue';
+import Avatar from '../../../pages/administration/users/components/Avatar.vue';
 
 library.add(faDatabase, faCaretLeft, faCaretRight);
 
@@ -58,7 +55,7 @@ export default {
 
     directives: { tooltip: VTooltip },
 
-    components: { CoreOperation },
+    components: { CoreOperation, Avatar },
 
     inject: ['i18n'],
 };
diff --git a/node_modules/@enso-ui/ui/src/bulma/layouts/Default.vue b/node_modules/@enso-ui/ui/src/bulma/layouts/Default.vue
index e16415c..d785a50 100644
--- a/node_modules/@enso-ui/ui/src/bulma/layouts/Default.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/layouts/Default.vue
@@ -5,7 +5,7 @@
         }">
         <div class="app-main"
             :class="{ 'lights-off': lightsOff }">
-            <navbar class="animated slideInDown"/>
+            <navbar-refresh/>
             <slide-down>
                 <bookmarks :class="[
                         { 'with-sidebar': sidebar.isVisible },
@@ -41,7 +41,7 @@
 import { SlideDown, HorizontalSlide } from '@enso-ui/transitions';
 import ScrollToTop from '@enso-ui/scroll-to-top/bulma';
 import CoreDefault from '../../core/layouts/Default.vue';
-import Navbar from '../components/navbar/Navbar.vue';
+import NavbarRefresh from '../components/navbar/NavbarRefresh.vue';
 import Sidebar from '../components/menu/Sidebar.vue';
 import Settings from '../components/settings/Settings.vue';
 import AppFooter from '../components/AppFooter.vue';
@@ -56,7 +56,7 @@ export default {
         CoreDefault,
         SlideDown,
         HorizontalSlide,
-        Navbar,
+        NavbarRefresh,
         Sidebar,
         Settings,
         ScrollToTop,
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/Edit.vue b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/Edit.vue
index 6c8c3ec..1ad5c06 100644
--- a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/Edit.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/Edit.vue
@@ -63,33 +63,51 @@
                             <span class="is-hidden-mobile"/>
                         </a>
                     </div>
+                    <div class="level-item"
+                        v-if="canAccess('administration.users.token')">
+                        <a class="button is-link"
+                           @click="generateToken"
+                           v-if="ready">
+                            <span class="is-hidden-mobile">
+                                {{ i18n('Generate Token') }}
+                            </span>
+                            <span class="icon">
+                                <fa icon="key"/>
+                            </span>
+                            <span class="is-hidden-mobile"/>
+                        </a>
+                    </div>
                 </template>
             </enso-form>
             <delete-modal :user-id="deletableUser"
                 @close="deletableUser = null"
                 @destroyed="navigateToIndex"
                 v-if="!!deletableUser"/>
+            <url :show="token !== ''"
+                :link="token"
+                @close="token = ''"/>
         </div>
     </div>
 </template>
 
 <script>
 import { library } from '@fortawesome/fontawesome-svg-core';
-import { faUserTie, faTrashAlt } from '@fortawesome/free-solid-svg-icons';
+import { faUserTie, faTrashAlt, faKey } from '@fortawesome/free-solid-svg-icons';
 import { EnsoForm, FormField } from '@enso-ui/forms/bulma';
+import Url from '@enso-ui/files/src/bulma/pages/files/components/Url.vue'; // TODO:: refactor to a package
 import PasswordStrength from '../../auth/components/PasswordStrength.vue';
 import DeleteModal from './components/DeleteModal.vue';
 
-library.add(faUserTie, faTrashAlt);
+library.add(faUserTie, faTrashAlt, faKey);
 
 export default {
     name: 'Edit',
 
     components: {
-        EnsoForm, FormField, PasswordStrength, DeleteModal,
+        EnsoForm, FormField, PasswordStrength, DeleteModal, Url,
     },
 
-    inject: ['i18n', 'canAccess'],
+    inject: ['i18n', 'canAccess', 'route'],
 
     data: () => ({
         deletableUser: null,
@@ -97,6 +115,7 @@ export default {
         pivotParams: { userGroups: { id: null } },
         password: null,
         passwordConfirmation: null,
+        token: '',
     }),
 
     methods: {
@@ -109,6 +128,10 @@ export default {
                 });
             });
         },
+        generateToken() {
+            axios.post(this.route('administration.users.token', this.$route.params))
+                .then(({ data }) => (this.token = data.token));
+        },
     },
 };
 </script>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/DeleteModal.vue b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/DeleteModal.vue
index 9bd6ddd..a3b520e 100644
--- a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/DeleteModal.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/DeleteModal.vue
@@ -1,6 +1,5 @@
 <template>
-    <modal show
-        v-on="$listeners">
+    <modal v-on="$listeners">
         <div class="box">
             <h5 class="subtitle is-5">
                 {{ i18n("The selected user is about to be deleted. Are you sure?") }}
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/UserProfile.vue b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/UserProfile.vue
index 0924523..1cb7721 100644
--- a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/UserProfile.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/UserProfile.vue
@@ -62,7 +62,8 @@
                             <a class="button is-fullwidth is-warning"
                                 @click="$root.$emit('start-impersonating', profile.id)"
                                 v-if="
-                                    !isSelfVisiting
+                                    !isWebview
+                                    && !isSelfVisiting
                                     && canAccess('core.impersonate.start')
                                     && !impersonating
                                 ">
@@ -180,9 +181,8 @@
     </div>
 </template>
 
-
 <script>
-import { mapState, mapMutations, mapActions } from 'vuex';
+import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';
 import { library } from '@fortawesome/fontawesome-svg-core';
 import {
     faUser, faSyncAlt, faTrashAlt, faUpload, faSignOutAlt, faPencilAlt,
@@ -208,6 +208,7 @@ export default {
         ...mapState(['user', 'meta', 'enums', 'impersonating']),
         ...mapState('auth', ['isAuth']),
         ...mapState('layout', ['isMobile']),
+        ...mapGetters(['isWebview']),
         isSelfVisiting() {
             return this.user.id === this.profile.id;
         },
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/Login.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Login.vue
index f53508c..3bd52c2 100644
--- a/node_modules/@enso-ui/ui/src/bulma/pages/auth/Login.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Login.vue
@@ -24,7 +24,11 @@ export default {
         ...mapMutations(['setShowQuote', 'setCsrfToken']),
         init(data) {
             this.setShowQuote(this.meta.showQuote);
-            this.setCsrfToken(data.csrfToken);
+
+            if (data.csrfToken) {
+                this.setCsrfToken(data.csrfToken);
+            }
+
             setTimeout(() => {
                 this.login();
                 this.home(true);
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/Register.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Register.vue
new file mode 100755
index 0000000..aa296ae
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Register.vue
@@ -0,0 +1,36 @@
+<template>
+        <register-form
+            action="Register"
+            route="register"
+            @success="init"/>
+    </template>
+
+<script>
+    import { mapMutations, mapState } from 'vuex';
+    import RegisterForm from './components/RegisterForm.vue';
+
+        export default {
+        name: 'Register',
+
+                components: { RegisterForm },
+
+            computed: {
+                ...mapState(['meta']),
+                },
+
+            methods: {
+                ...mapMutations('auth', ['login']),
+                    ...mapMutations('layout', ['home']),
+                    ...mapMutations(['setShowQuote', 'setCsrfToken']),
+                    init(data) {
+                        this.setShowQuote(this.meta.showQuote);
+                        this.setCsrfToken(data.csrfToken);
+                        setTimeout(() => {
+                                this.$router.push({ name: 'verify' });
+                                // this.login();
+                                    // this.home(true);
+                                    }, 500);
+                    },
+            },
+    };
+    </script>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/Verify.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Verify.vue
new file mode 100755
index 0000000..ba084e6
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Verify.vue
@@ -0,0 +1,34 @@
+<template>
+        <verify-form
+            action="Resend"
+            @verified="init"/>
+    </template>
+
+<script>
+    import { mapMutations, mapState } from 'vuex';
+    import VerifyForm from './components/VerifyForm.vue';
+
+        export default {
+        name: 'Verify',
+
+                components: { VerifyForm },
+
+            computed: {
+                ...mapState(['meta']),
+                },
+
+            methods: {
+                ...mapMutations('auth', ['login']),
+                    ...mapMutations('layout', ['home']),
+                    ...mapMutations(['setShowQuote', 'setCsrfToken']),
+                    init(data) {
+                        this.setShowQuote(this.meta.showQuote);
+                        this.setCsrfToken(data.csrfToken);
+                        setTimeout(() => {
+                                this.login();
+                                this.home(true);
+                            }, 3000);
+                    },
+            },
+    };
+    </script>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/AuthForm.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/AuthForm.vue
index 12bf71d..709260d 100644
--- a/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/AuthForm.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/AuthForm.vue
@@ -7,6 +7,7 @@
                     <img src="/images/logo.svg">
                 </figure>
                 {{ meta.appName }}
+                <span v-if="isWebview"> Mobile</span>
             </h3>
             <form class="has-margin-bottom-medium"
                 @submit.prevent="submit()">
@@ -49,7 +50,7 @@
                         </span>
                         <reveal-password :meta="passwordMeta"
                             :class="{ 'is-spaced': isSuccessful || errors.has('password') }"
-                            v-if="password"/>
+                            v-if="password && !isSuccessful"/>
                         <span v-if="isSuccessful"
                             class="icon is-small is-right has-text-success">
                             <fa icon="check"/>
@@ -80,7 +81,7 @@
                         </span>
                         <reveal-password :meta="confirmationMeta"
                             :class="{ 'is-spaced': match || isSuccessful || errors.has('password')}"
-                            v-if="passwordConfirmation"/>
+                            v-if="passwordConfirmation && !isSuccessful"/>
                         <span v-if="errors.has('password')"
                             class="icon is-small is-right has-text-danger">
                             <fa icon="exclamation-triangle"/>
@@ -95,7 +96,7 @@
                         {{ errors.get('password') }}
                     </p>
                 </div>
-                <div v-if="isLogin" class="field">
+                <div v-if="isLogin && !isWebview" class="field">
                     <div class="control">
                         <label class="checkbox">
                         <input v-model="remember"
@@ -116,18 +117,54 @@
                     </button>
                 </div>
             </form>
+            <router-link v-if="isLogin"
+                         :to="{ name: 'register' }"
+                         class="is-pulled-left">
+                {{ i18n('Register') }}
+            </router-link>
             <router-link v-if="isLogin"
                 :to="{ name: 'password.email' }"
                 class="is-pulled-right">
                 {{ i18n('Forgot password') }}
             </router-link>
+<div>
+<br />
+            <router-link v-if="isLogin"
+                         :to="{ name: 'about.index' }"
+                         class="is-pulled-left">
+                {{ i18n('About') }}&nbsp;
+            </router-link>
+            <router-link v-if="isLogin"
+                         :to="{ name: 'contact.index' }"
+                         class="is-pulled-right">
+                {{ i18n('Contact') }} &nbsp;
+            </router-link>
+</div>
+<br />
+<div>
+            <router-link v-if="isLogin"
+                         :to="{ name: 'privacy.index' }"
+                         class="is-pulled-left">
+                {{ i18n('Privacy Policy') }}	
+            </router-link>
+            <router-link v-if="isLogin"
+                         :to="{ name: 'termsandconditions.index' }"
+                         class="is-pulled-right">
+                {{ i18n('Terms and Conditions') }}
+            </router-link>
+</div>
+<br /><br /><br />
+<div>
+Copyright 2020 Genealogia Ltd. International House, 12 Constance Street
+London, E16 2DQ. Company Number: 12734769
+</div>
             <div class="is-clearfix"/>
         </div>
     </div>
 </template>
 
 <script>
-import { mapState } from 'vuex';
+import { mapState, mapGetters } from 'vuex';
 import { library } from '@fortawesome/fontawesome-svg-core';
 import {
     faEnvelope, faCheck, faExclamationTriangle, faLock, faUser,
@@ -150,25 +187,26 @@ export default {
     inject: {
         i18n: { from: 'i18n' },
         routeResolver: { from: 'route' },
+        toastr: { from: 'toastr' },
     },
 
     props: {
         action: {
             required: true,
-            type: String
+            type: String,
         },
         isLogin: {
             default: false,
-            type: Boolean
+            type: Boolean,
         },
         isReset: {
             default: false,
-            type: Boolean
+            type: Boolean,
         },
         route: {
             required: true,
-            type: String
-        }
+            type: String,
+        },
     },
 
     data: () => ({
@@ -189,6 +227,7 @@ export default {
 
     computed: {
         ...mapState(['meta']),
+        ...mapGetters(['isWebview']),
         token() {
             return this.isReset
                 ? this.$route.params.token
@@ -212,13 +251,23 @@ export default {
         },
         loginParams() {
             const { email, password, remember } = this;
+            const params = { email, password, remember };
 
-            return { email, password, remember };
+            return this.isWebview
+                ? { ...params, device_name: 'mobile_app' }
+                : params;
+        },
+        config() {
+            return this.isWebview
+                ? { headers: { webview: this.isWebview } }
+                : {};
         },
         resetParams() {
             const { email, password, token } = this;
 
-            return { email, password, password_confirmation: this.passwordConfirmation, token };
+            return {
+                email, password, password_confirmation: this.passwordConfirmation, token,
+            };
         },
     },
 
@@ -227,25 +276,25 @@ export default {
             this.loading = true;
             this.isSuccessful = false;
 
-            axios.post(this.routeResolver(this.route), this.postParams)
+            axios.post(this.routeResolver(this.route), this.postParams, this.config)
                 .then(({ data }) => {
                     this.loading = false;
                     this.isSuccessful = true;
                     this.$emit('success', data);
-                }).catch((error) => {
+                }).catch(error => {
                     this.loading = false;
 
                     const { status, data } = error.response;
 
                     switch (status) {
-                        case 422:
-                            this.errors.set(data.errors);
-                            break;
-                        case 429:
-                            this.$toastr.error(data.message);
-                            break;
-                        default:
-                            throw error;
+                    case 422:
+                        this.errors.set(data.errors);
+                        break;
+                    case 429:
+                        this.toastr.error(data.message);
+                        break;
+                    default:
+                        throw error;
                     }
                 });
         },
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/RegisterForm.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/RegisterForm.vue
new file mode 100755
index 0000000..6784dd1
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/RegisterForm.vue
@@ -0,0 +1,265 @@
+<template>
+        <div class="login">
+            <div class="box has-padding-medium">
+                <h3 class="title is-3 has-text-black has-text-centered has-margin-bottom-medium">
+                    <figure class="image is-24x24 logo is-clickable"
+                                                 @click="$router.push({ name: 'login' })">
+                        <img src="/images/logo.svg">
+                    </figure>
+                    {{ meta.appName }}
+                </h3>
+                <form class="has-margin-bottom-medium"
+                                       @submit.prevent="submit()">
+                    <div class="field">
+                        <div class="control has-icons-left has-icons-right">
+                            <input v-model="name"
+                                                                v-focus
+                                                                class="input"
+                                                                type="text"
+                                                                :class="{ 'is-danger': errors.has('name'), 'is-success': isSuccessful }"
+                                                                :placeholder="i18n('User Name')"
+                                                                @input="errors.clear('name')">
+                            <span class="icon is-small is-left">
+                            <fa icon="user"/>
+                        </span>
+                            <span v-if="isSuccessful"
+                                                               class="icon is-small is-right has-text-success">
+                            <fa icon="check"/>
+                        </span>
+                            <span v-if="errors.has('name')"
+                                                               class="icon is-small is-right has-text-danger">
+                            <fa icon="exclamation-triangle"/>
+                        </span>
+                        </div>
+                        <p class="has-text-left has-text-danger is-size-7"
+                                                    v-if="errors.has('name')">
+                            {{ errors.get('name') }}
+                        </p>
+                    </div>
+                    <div class="field">
+                        <div class="control has-icons-left has-icons-right">
+                            <input v-model="email"
+                                                                v-focus
+                                                                class="input"
+                                                                type="email"
+                                                                :class="{ 'is-danger': errors.has('email'), 'is-success': isSuccessful }"
+                                                                :placeholder="i18n('Email')"
+                                                                @input="errors.clear('email')">
+                            <span class="icon is-small is-left">
+                            <fa icon="envelope"/>
+                        </span>
+                            <span v-if="isSuccessful"
+                                                               class="icon is-small is-right has-text-success">
+                            <fa icon="check"/>
+                        </span>
+                            <span v-if="errors.has('email')"
+                                                               class="icon is-small is-right has-text-danger">
+                            <fa icon="exclamation-triangle"/>
+                        </span>
+                        </div>
+                        <p class="has-text-left has-text-danger is-size-7"
+                                                    v-if="errors.has('email')">
+                            {{ errors.get('email') }}
+                        </p>
+                    </div>
+                    <div class="field">
+                        <div class="control has-icons-left has-icons-right">
+                            <input v-model="password"
+                                                                class="input"
+                                                                :type="passwordMeta.content"
+                                                                :class="{ 'is-danger': errors.has('password'), 'is-success': isSuccessful }"
+                                                                :placeholder="i18n('Password')"
+                                                                @input="errors.clear('password')">
+                            <span class="icon is-small is-left">
+                            <fa icon="lock"/>
+                        </span>
+                            <reveal-password :meta="passwordMeta"
+                                                                          :class="{ 'is-spaced': isSuccessful || errors.has('password') }"
+                                                                          v-if="password"/>
+                            <span v-if="isSuccessful"
+                                                               class="icon is-small is-right has-text-success">
+                            <fa icon="check"/>
+                        </span>
+                            <span v-if="errors.has('password')"
+                                                               class="icon is-small is-right has-text-danger">
+                            <fa icon="exclamation-triangle"/>
+                        </span>
+                            <slot name="password-strength"
+                                                               :password="password"
+                                                               :has-password="hasPassword"/>
+                        </div>
+                        <p class="has-text-left has-text-danger is-size-7"
+                                                    v-if="errors.has('password')">
+                            {{ errors.get('password') }}
+                        </p>
+                    </div>
+                    <div class="field">
+                        <div class="control has-icons-left has-icons-right">
+                            <input v-model="password_confirmation"
+                                                                class="input"
+                                                                :type="confirmationMeta.content"
+                                                                :class="{ 'is-danger': errors.has('password'), 'is-success': isSuccessful }"
+                                                                :placeholder="i18n('Repeat Password')"
+                                                                @input="errors.clear('password')">
+                            <span class="icon is-small is-left">
+                            <fa icon="lock"/>
+                        </span>
+                            <reveal-password :meta="confirmationMeta"
+                                                                          :class="{ 'is-spaced': match || isSuccessful || errors.has('password')}"
+                                                                          v-if="password_confirmation"/>
+                            <span v-if="errors.has('password')"
+                                                               class="icon is-small is-right has-text-danger">
+                            <fa icon="exclamation-triangle"/>
+                        </span>
+                            <span v-if="match && !errors.has('password') || isSuccessful"
+                                                               class="icon is-small is-right has-text-success">
+                            <fa icon="check"/>
+                        </span>
+                        </div>
+                        <p class="has-text-left has-text-danger is-size-7"
+                                                    v-if="errors.has('password')">
+                            {{ errors.get('password') }}
+                        </p>
+                    </div>
+
+                    <div class="field">
+                        <button class="button is-primary is-fullwidth"
+                                                         :class="{ 'is-loading': loading }"
+                                                         type="submit"
+                                                         @click.prevent="submit()">
+                            <span class="icon is-small">
+                            <fa :icon="'user'"/>
+                        </span>
+                            <span>{{ i18n(action) }}</span>
+                        </button>
+                    </div>
+                </form>
+                <router-link
+                    :to="'/login'"
+                    class="is-pulled-right">
+                    {{ i18n('Log in') }}
+                </router-link>
+                <div class="is-clearfix"/>
+            </div>
+        </div>
+    </template>
+
+<script>
+    import { mapState } from 'vuex';
+    import { library } from '@fortawesome/fontawesome-svg-core';
+    import {
+        faEnvelope, faCheck, faExclamationTriangle, faLock, faUser,
+        } from '@fortawesome/free-solid-svg-icons';
+    import { focus } from '@enso-ui/directives';
+    import Errors from '@enso-ui/laravel-validation';
+    import RevealPassword from '@enso-ui/forms/src/bulma/parts/RevealPassword.vue';
+
+        library.add([
+                faEnvelope, faCheck, faExclamationTriangle, faLock, faUser,
+            ]);
+
+        export default {
+        name: 'RegisterForm',
+
+                components: { RevealPassword },
+
+            directives: { focus },
+
+            inject: {
+                i18n: { from: 'i18n' },
+            },
+
+            props: {
+                action: {
+                        required: true,
+                            type: String
+                    },
+                route: {
+                        required: true,
+                            type: String
+                    }
+            },
+
+            data: () => ({
+                name: '',
+                email: '',
+                errors: new Errors(),
+                isSuccessful: false,
+                loading: false,
+                password: '',
+                passwordMeta: {
+                    content: 'password',
+                    },
+            password_confirmation: null,
+                confirmationMeta: {
+                    content: 'password',
+                    },
+        }),
+
+            computed: {
+                ...mapState(['meta']),
+                    hasPassword() {
+                        return this.password !== null && this.password.length;
+                    },
+                match() {
+                        return this.hasPassword
+                                && this.password === this.password_confirmation;
+                    },
+                postParams() {
+                        return this.registerParams;
+                    },
+                registerParams() {
+                        const { email, password, name, password_confirmation } = this;
+
+                            return { email, password, name, password_confirmation};
+                    },
+                registerLink() {
+                        return '/api/register';
+                    },
+            },
+
+            methods: {
+                submit() {
+                        this.loading = true;
+                        this.isSuccessful = false;
+                        axios.post(this.registerLink, this.postParams)
+                            .then(({ data }) => {
+                                    this.loading = false;
+                                    this.isSuccessful = true;
+                                    this.$emit('success', data);
+
+                                    }).catch((error) => {
+                                    this.loading = false;
+
+                                        const { status, data } = error.response;
+
+                                        switch (status) {
+                                            case 422:
+                                                    this.errors.set(data.errors);
+                                                    break;
+                                                case 429:
+                                                    this.$toastr.error(data.message);
+                                                    break;
+                                                default:
+                                                    throw error;
+                                            }
+                                });
+                    },
+            },
+    };
+    </script>
+
+<style lang="scss">
+        .login {
+            max-width: 400px;
+            margin: auto;
+
+                .is-spaced {
+                    margin-right: 1.6em;
+                }
+
+                figure.logo {
+                    display: inline-block;
+                }
+        }
+    </style>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/VerifyForm.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/VerifyForm.vue
new file mode 100755
index 0000000..e9b04f1
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/VerifyForm.vue
@@ -0,0 +1,202 @@
+<template>
+        <div class="login">
+            <div class="box has-padding-medium">
+                <h3 class="title is-3 has-text-black has-text-centered has-margin-bottom-medium">
+                    <figure class="image is-24x24 logo is-clickable"
+                                                 @click="$router.push({ name: 'login' })">
+                        <img src="/images/logo.svg">
+                    </figure>
+                    {{ meta.appName }}
+                </h3>
+                <div class="">
+                    <p class="t-center" v-if="!isSuccessful"> Thank you for registering.</p>
+                    <p class="t-center" v-if="isSuccessful"> Thank you for using Genealogia.</p>
+                </div>
+
+                <router-link v-if="isLogin"
+                                              :to="{ name: 'login' }"
+                                              class="is-pulled-right">
+                    {{ i18n('Log in') }}
+                </router-link>
+                <div class="is-clearfix"/>
+            </div>
+        </div>
+    </template>
+
+<script>
+    import { mapState } from 'vuex';
+    import { library } from '@fortawesome/fontawesome-svg-core';
+    import {
+        faEnvelope, faCheck, faExclamationTriangle, faLock, faUser,
+        } from '@fortawesome/free-solid-svg-icons';
+    import { focus } from '@enso-ui/directives';
+    import Errors from '@enso-ui/laravel-validation';
+    import RevealPassword from '@enso-ui/forms/src/bulma/parts/RevealPassword.vue';
+
+        library.add([
+                faEnvelope, faCheck, faExclamationTriangle, faLock, faUser,
+            ]);
+
+        export default {
+        name: 'VerifyForm',
+
+                directives: { focus },
+
+            inject: {
+                i18n: { from: 'i18n' },
+                routeResolver: { from: 'route' },
+            },
+
+            props: {
+                action: {
+                        required: true,
+                            type: String
+                    },
+                isLogin: {
+                        default: false,
+                            type: Boolean
+                    },
+                isReset: {
+                        default: false,
+                            type: Boolean
+                    },
+                route: {
+                        required: true,
+                            type: String
+                    }
+            },
+
+            data: () => ({
+                errors: new Errors(),
+                isSuccessful: false,
+                loading: false,
+            }),
+
+            computed: {
+                ...mapState(['meta']),
+                    token() {
+                        return this.$route.query.token;
+                    },
+
+                    postParams() {
+                        return this.verifyParams;
+                    },
+                verifyParams() {
+                        const { token, loading } = this;
+                        return { token , loading};
+                    },
+                verifyLink() {
+                        return '/api/verify';
+                    },
+                resendLink() {
+                        return '/api/resend';
+                    },
+            },
+        mounted() {
+                this.verify();
+            },
+        methods: {
+                verify() {
+                        this.loading = true;
+                        this.isSuccessful = false;
+
+                            axios.post(this.verifyLink, this.postParams)
+                            .then(({ data }) => {
+                                    this.loading = false;
+                                    this.isSuccessful = true;
+                                    this.$emit('verified', data);
+                                }).catch((error) => {
+                                    this.loading = false;
+
+                                        const { status, data } = error.response;
+
+                                        switch (status) {
+                                            case 422:
+                                                    this.errors.set(data.errors);
+                                                    // go to email verify page
+                                                        break;
+                                                case 429:
+                                                    this.$toastr.error(data.message);
+                                                    break;
+                                                default:
+                                                    throw error;
+                                            }
+                                });
+                    },
+                resend() {
+                        this.loading = true;
+                        this.isSuccessful = false;
+
+                            axios.post(this.resendLink, this.postParams)
+                            .then(({ data }) => {
+                                    this.loading = false;
+                                    this.isSuccessful = true;
+                                    this.$emit('success', data);
+                                }).catch((error) => {
+                                    this.loading = false;
+
+                                        const { status, data } = error.response;
+
+                                        switch (status) {
+                                            case 422:
+                                                    this.errors.set(data.errors);
+                                                    // go to email verify page
+                                                        break;
+                                                case 429:
+                                                    this.$toastr.error(data.message);
+                                                    break;
+                                                default:
+                                                    throw error;
+                                            }
+                                });
+                    },
+
+                },
+    };
+    </script>
+
+<style lang="scss">
+        .login {
+            max-width: 400px;
+            margin: auto;
+
+                .is-spaced {
+                    margin-right: 1.6em;
+                }
+
+                figure.logo {
+                    display: inline-block;
+                }
+                .t-center {
+                    text-align: center;
+                }
+        }
+    </style>
+diff --git a/node_modules/@enso-ui/ui/src/bulma/routes/register.js b/node_modules/@enso-ui/ui/src/bulma/routes/register.js
+new file mode 100755
+index 0000000..d1752b4
+--- /dev/null
+ b/node_modules/@enso-ui/ui/src/bulma/routes/register.js
+@@ -0,0 1,22 @@
+import store from '@root/store';
+
+const Register = () => import('../pages/auth/Register.vue');
+
+const redirect = (to, from, next) => {
+    if (store.state.auth.isAuth) {
+        next({ path: '/' });
+    } else {
+        next();
+    }
+};
+
+export default [{
+    name: 'register',
+    path: '/register',
+    component: Register,
+    beforeEnter: redirect,
+    meta: {
+        guestGuard: true,
+        title: 'Register',
+    },
+}];
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/password/Email.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/password/Email.vue
index accb7e6..147506e 100644
--- a/node_modules/@enso-ui/ui/src/bulma/pages/auth/password/Email.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/password/Email.vue
@@ -1,7 +1,7 @@
 <template>
     <auth-form action="Send a reset password link"
         route="password.email"
-        @success="$toastr.success($event.status)"/>
+        @success="toastr.success($event.status)"/>
 </template>
 
 <script>
@@ -11,5 +11,7 @@ export default {
     name: 'Email',
 
     components: { AuthForm },
+
+    inject: ['toastr'],
 };
 </script>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/password/Reset.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/password/Reset.vue
index 6228520..20c22ca 100644
--- a/node_modules/@enso-ui/ui/src/bulma/pages/auth/password/Reset.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/password/Reset.vue
@@ -20,9 +20,11 @@ export default {
 
     components: { AuthForm, PasswordStrength },
 
+    inject: ['toastr'],
+
     methods: {
         success({ status }) {
-            this.$toastr.success(status);
+            this.toastr.success(status);
             setTimeout(() => this.$router.push({ name: 'login' }), 350);
         },
     },
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/notifications/Index.vue b/node_modules/@enso-ui/ui/src/bulma/pages/notifications/Index.vue
index 9a2f6e5..c2e082a 100644
--- a/node_modules/@enso-ui/ui/src/bulma/pages/notifications/Index.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/notifications/Index.vue
@@ -140,7 +140,7 @@ export default {
                 .catch(this.errorHandler);
         },
         updateAll() {
-            this.notifications.forEach((notification) => {
+            this.notifications.forEach(notification => {
                 notification.read_at = notification.read_at || format(new Date(), 'Y-MM-DD H:mm:s');
             });
 
diff --git a/node_modules/@enso-ui/ui/src/bulma/routes.js b/node_modules/@enso-ui/ui/src/bulma/routes.js
index 0f23938..335a0e5 100644
--- a/node_modules/@enso-ui/ui/src/bulma/routes.js
+++ b/node_modules/@enso-ui/ui/src/bulma/routes.js
@@ -7,14 +7,11 @@ const routes = routeImporter(require.context('./routes', false, /.*\.js$/));
     .add(routeImporter(require.context('@enso-ui/companies/src/bulma/routes', false, /.*\.js$/)))
     .add(routeImporter(require.context('@enso-ui/data-import/src/bulma/routes', false, /.*\.js$/)))
     .add(routeImporter(require.context('@enso-ui/files/src/bulma/routes', false, /.*\.js$/)))
-    .add(routeImporter(require.context('@enso-ui/how-to/src/bulma/routes', false, /.*\.js$/)))
     .add(routeImporter(require.context('@enso-ui/localisation/src/bulma/routes', false, /.*\.js$/)))
     .add(routeImporter(require.context('@enso-ui/menus/src/bulma/routes', false, /.*\.js$/)))
     .add(routeImporter(require.context('@enso-ui/people/src/bulma/routes', false, /.*\.js$/)))
     .add(routeImporter(require.context('@enso-ui/permissions/src/bulma/routes', false, /.*\.js$/)))
     .add(routeImporter(require.context('@enso-ui/roles/src/bulma/routes', false, /.*\.js$/)))
     .add(routeImporter(require.context('@enso-ui/teams/src/bulma/routes', false, /.*\.js$/)))
-    .add(routeImporter(require.context('@enso-ui/tutorials/src/bulma/routes', false, /.*\.js$/)))
     .add(routeImporter(require.context('@enso-ui/logs/src/bulma/routes', false, /.*\.js$/)))
-    .add(routeImporter(require.context('@enso-ui/activity-log/src/bulma/routes', false, /.*\.js$/)));
 export default routes;
diff --git a/node_modules/@enso-ui/ui/src/bulma/routes/register.js b/node_modules/@enso-ui/ui/src/bulma/routes/register.js
new file mode 100755
index 0000000..8c9ba1f
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/routes/register.js
@@ -0,0 +1,22 @@
+import store from '@root/store';
+
+    const Register = () => import('../pages/auth/Register.vue');
+
+    const redirect = (to, from, next) => {
+        if (store.state.auth.isAuth) {
+                next({ path: '/' });
+            } else {
+                next();
+            }
+    };
+
+    export default [{
+    name: 'register',
+        path: '/register',
+        component: Register,
+        beforeEnter: redirect,
+        meta: {
+            guestGuard: true,
+                title: 'Register',
+            },
+}];
diff --git a/node_modules/@enso-ui/ui/src/bulma/routes/verify.js b/node_modules/@enso-ui/ui/src/bulma/routes/verify.js
new file mode 100755
index 0000000..84d71c8
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/routes/verify.js
@@ -0,0 +1,22 @@
+import store from '@root/store';
+
+    const Verify = () => import('../pages/auth/Verify.vue');
+
+    const redirect = (to, from, next) => {
+        if (store.state.auth.isAuth) {
+                next({ path: '/' });
+            } else {
+                next();
+            }
+    };
+
+    export default [{
+    name: 'verify',
+        path: '/verify',
+        component: Verify,
+        beforeEnter: redirect,
+        meta: {
+            guestGuard: true,
+                title: 'Activate Account',
+            },
+}];
diff --git a/node_modules/@enso-ui/ui/src/core/App.vue b/node_modules/@enso-ui/ui/src/core/App.vue
index d5e52c1..1d735c9 100644
--- a/node_modules/@enso-ui/ui/src/core/App.vue
+++ b/node_modules/@enso-ui/ui/src/core/App.vue
@@ -1,15 +1,18 @@
 <script>
 import { mapState, mapActions, mapGetters } from 'vuex';
-import { canAccess, errorHandler, i18n } from '@enso-ui/mixins';
+import { canAccess, errorHandler } from '@enso-ui/mixins';
 import RouteMapper from '@enso-ui/route-mapper';
+import toastr from '@enso-ui/toastr';
+import i18n from '../modules/plugins/i18n';
 
 export default {
     name: 'CoreApp',
 
-    mixins: [canAccess, errorHandler, i18n],
+    mixins: [canAccess, errorHandler],
 
     data: () => ({
         routeMapper: null,
+        toastr,
     }),
 
     computed: {
@@ -35,6 +38,9 @@ export default {
 
     methods: {
         ...mapActions('layout', ['loadTheme']),
+        i18n(key, params = null) {
+            return i18n(key, params);
+        },
         route(name, params, absolute) {
             return this.routeMapper.get(name, params, absolute);
         },
@@ -46,6 +52,7 @@ export default {
             errorHandler: this.errorHandler,
             i18n: this.i18n,
             route: this.route,
+            toastr: this.toastr,
         };
     },
 
diff --git a/node_modules/@enso-ui/ui/src/core/components/Bookmarks.vue b/node_modules/@enso-ui/ui/src/core/components/Bookmarks.vue
index 8bf805c..f8a4927 100644
--- a/node_modules/@enso-ui/ui/src/core/components/Bookmarks.vue
+++ b/node_modules/@enso-ui/ui/src/core/components/Bookmarks.vue
@@ -111,7 +111,7 @@ export default {
             stickBindings: bookmark => ({
                 click: () => this.stick(bookmark),
             }),
-            bookmarkBindings: (bookmark) => {
+            bookmarkBindings: bookmark => {
                 this.uniqueId(bookmark);
             },
             removeBindings: bookmark => ({
diff --git a/node_modules/@enso-ui/ui/src/core/components/navbar/IO.vue b/node_modules/@enso-ui/ui/src/core/components/navbar/IO.vue
index 43e9741..607a57a 100644
--- a/node_modules/@enso-ui/ui/src/core/components/navbar/IO.vue
+++ b/node_modules/@enso-ui/ui/src/core/components/navbar/IO.vue
@@ -1,6 +1,5 @@
 <script>
-import { mapState, mapMutations, mapGetters } from 'vuex';
-import Pusher from 'pusher-js'; //TODO remove?
+import { mapState, mapGetters, mapActions } from 'vuex';
 
 export default {
     name: 'IO',
@@ -26,7 +25,7 @@ export default {
     },
 
     methods: {
-        ...mapMutations('websockets', ['connect']),
+        ...mapActions('websockets', ['connect']),
         listen() {
             window.Echo.private(this.ioChannel)
                 .listen('.io-started', ({ operation }) => {
diff --git a/node_modules/@enso-ui/ui/src/core/components/navbar/MissingKeys.vue b/node_modules/@enso-ui/ui/src/core/components/navbar/MissingKeys.vue
index ebc0cce..449a73f 100644
--- a/node_modules/@enso-ui/ui/src/core/components/navbar/MissingKeys.vue
+++ b/node_modules/@enso-ui/ui/src/core/components/navbar/MissingKeys.vue
@@ -4,7 +4,7 @@ import { mapState, mapMutations } from 'vuex';
 export default {
     name: 'MissingKeys',
 
-    inject: ['errorHandler', 'route'],
+    inject: ['errorHandler', 'route', 'toastr'],
 
     data: () => ({
         hover: false,
@@ -30,7 +30,7 @@ export default {
             ).then(({ data }) => {
                 this.missingKeys.forEach(key => this.addKey(key));
                 this.clearMissingKeys();
-                this.$toastr.success(data.message);
+                this.toastr.success(data.message);
             }).catch(this.errorHandler);
         },
     },
diff --git a/node_modules/@enso-ui/ui/src/core/components/navbar/Notifications.vue b/node_modules/@enso-ui/ui/src/core/components/navbar/Notifications.vue
index 1e7dcb3..48b7a00 100644
--- a/node_modules/@enso-ui/ui/src/core/components/navbar/Notifications.vue
+++ b/node_modules/@enso-ui/ui/src/core/components/navbar/Notifications.vue
@@ -1,8 +1,8 @@
 <script>
 import debounce from 'lodash/debounce';
-import { mapState, mapMutations, mapGetters } from 'vuex';
-import Pusher from 'pusher-js';
-import Echo from 'laravel-echo';
+import {
+    mapState, mapGetters, mapActions,
+} from 'vuex';
 import Favico from 'favico.js';
 import format from '../../../modules/plugins/date-fns/format';
 import formatDistance from '../../../modules/plugins/date-fns/formatDistance';
@@ -10,7 +10,7 @@ import formatDistance from '../../../modules/plugins/date-fns/formatDistance';
 export default {
     name: 'Notifications',
 
-    inject: ['errorHandler', 'route'],
+    inject: ['errorHandler', 'route', 'toastr'],
 
     props: {
         favicoAnimation: {
@@ -38,6 +38,7 @@ export default {
 
     computed: {
         ...mapGetters('websockets', ['privateChannel']),
+        ...mapGetters(['isWebview']),
         ...mapState(['user']),
         ...mapState('layout', ['isTouch']),
     },
@@ -58,7 +59,7 @@ export default {
     },
 
     methods: {
-        ...mapMutations('websockets', ['connect']),
+        ...mapActions('websockets', ['connect']),
         toggle() {
             this.visible = !this.visible;
 
@@ -131,23 +132,15 @@ export default {
             });
         },
         listen() {
-            window.Echo.private(this.privateChannel).notification(({
-                level, body, title, icon,
-            }) => {
+            window.Echo.private(this.privateChannel).notification(notification => {
                 this.unread++;
                 this.needsUpdate = true;
                 this.offset = 0;
 
-                if (document.hidden && this.desktopNotifications) {
-                    const notification = new Notification(title, { body });
-                    notification.onclick = () => (window.focus());
-                    window.navigator.vibrate(500);
-                    return;
-                }
+                this.toast(notification);
 
-                this.$toastr.when(title, toastr => toastr.title(title))
-                    .when(icon, toastr => toastr.icon(icon))
-                    .when(level, toastr => toastr[level](body), toastr => toastr.info(body));
+                return this.webview(notification)
+                    || this.desktop(notification);
             });
         },
         computeScrollPosition(event) {
@@ -196,6 +189,37 @@ export default {
         now() {
             return format(new Date());
         },
+        webview({ body, title }) {
+            if (this.isWebview) {
+                ReactNativeWebView.postMessage(JSON.stringify({
+                    title,
+                    body,
+                    type: 'notification',
+                }));
+
+                return true;
+            }
+
+            return false;
+        },
+        desktop({ body, title }) {
+            if (document.hidden && this.desktopNotifications) {
+                const notification = new Notification(title, { body });
+                notification.onclick = () => (window.focus());
+                window.navigator.vibrate(500);
+
+                return true;
+            }
+
+            return false;
+        },
+        toast({
+            level, body, title, icon,
+        }) {
+            this.toastr.when(title, toastr => toastr.title(title))
+                .when(icon, toastr => toastr.icon(icon))
+                .when(level, toastr => toastr[level](body), toastr => toastr.info(body));
+        },
     },
 
     render() {
diff --git a/node_modules/@enso-ui/ui/src/core/components/navbar/ProfileControl.vue b/node_modules/@enso-ui/ui/src/core/components/navbar/ProfileControl.vue
index 4a4795a..36286a5 100644
--- a/node_modules/@enso-ui/ui/src/core/components/navbar/ProfileControl.vue
+++ b/node_modules/@enso-ui/ui/src/core/components/navbar/ProfileControl.vue
@@ -1,5 +1,5 @@
 <script>
-import { mapState, mapGetters } from 'vuex';
+import { mapState } from 'vuex';
 
 export default {
     name: 'CoreProfileControl',
diff --git a/node_modules/@enso-ui/ui/src/core/components/navbar/Search.vue b/node_modules/@enso-ui/ui/src/core/components/navbar/Search.vue
index b302845..3c496b8 100644
--- a/node_modules/@enso-ui/ui/src/core/components/navbar/Search.vue
+++ b/node_modules/@enso-ui/ui/src/core/components/navbar/Search.vue
@@ -103,7 +103,6 @@ export default {
         },
         addShortcut() {
             document.addEventListener('keydown', this.keyDown);
-            const input = this.$el.querySelector('input');
 
             this.$once('hook:destroyed', () => {
                 document.removeEventListener('keydown', this.keyDown);
@@ -121,7 +120,10 @@ export default {
                 errorHandler: this.errorHandler,
             },
             controlEvents: {
-                click: this.showSearch,
+                click: e => {
+                    this.showSearch();
+                    e.stopPropagation();
+                },
             },
             events: {
                 selected: this.redirect,
diff --git a/node_modules/@enso-ui/ui/src/core/components/navbar/io/Operation.vue b/node_modules/@enso-ui/ui/src/core/components/navbar/io/Operation.vue
index 5a1404f..3912855 100644
--- a/node_modules/@enso-ui/ui/src/core/components/navbar/io/Operation.vue
+++ b/node_modules/@enso-ui/ui/src/core/components/navbar/io/Operation.vue
@@ -28,9 +28,6 @@ export default {
     },
 
     methods: {
-        avatar({ avatarId }) {
-            return this.route('core.avatars.show', avatarId);
-        },
         since(since) {
             return formatDistance(since);
         },
@@ -41,7 +38,6 @@ export default {
             operation: this.operation,
             since: this.since,
             isIn: this.isIn,
-            avatar: this.avatar,
         });
     },
 };
diff --git a/node_modules/@enso-ui/ui/src/core/components/settings/KeyCollector.vue b/node_modules/@enso-ui/ui/src/core/components/settings/KeyCollector.vue
index 3449c5b..240af9a 100644
--- a/node_modules/@enso-ui/ui/src/core/components/settings/KeyCollector.vue
+++ b/node_modules/@enso-ui/ui/src/core/components/settings/KeyCollector.vue
@@ -18,7 +18,7 @@ export default {
                 value: this.collect,
             },
             events: {
-                input: (state) => {
+                input: state => {
                     this.collect = state;
                     this.setKeyCollector(state);
                 },
diff --git a/node_modules/@enso-ui/ui/src/core/components/settings/ToastrPosition.vue b/node_modules/@enso-ui/ui/src/core/components/settings/ToastrPosition.vue
index e5bd84b..dc3d991 100644
--- a/node_modules/@enso-ui/ui/src/core/components/settings/ToastrPosition.vue
+++ b/node_modules/@enso-ui/ui/src/core/components/settings/ToastrPosition.vue
@@ -5,6 +5,8 @@ import { positions } from '@enso-ui/toastr/config';
 export default {
     name: 'ToastrPosition',
 
+    inject: ['toastr'],
+
     data: () => ({
         positions,
     }),
@@ -15,7 +17,8 @@ export default {
 
     created() {
         if (this.toastrPosition) {
-            this.$toastr.position(this.toastrPosition);
+            this.toastr.defaults({ position: this.toastrPosition }).reset();
+            this.$toastr.defaults({ position: this.toastrPosition }).reset();
         }
     },
 
@@ -23,7 +26,8 @@ export default {
         ...mapActions('preferences', ['setToastrPosition']),
         update(position) {
             this.setToastrPosition(position);
-            this.$toastr.position(this.toastrPosition);
+            this.toastr.defaults({ position }).reset();
+            this.$toastr.defaults({ position }).reset();
         },
     },
 
diff --git a/node_modules/@enso-ui/ui/src/core/layouts/Default.vue b/node_modules/@enso-ui/ui/src/core/layouts/Default.vue
index 92ef6c3..0be35b0 100644
--- a/node_modules/@enso-ui/ui/src/core/layouts/Default.vue
+++ b/node_modules/@enso-ui/ui/src/core/layouts/Default.vue
@@ -6,7 +6,7 @@ import {
 export default {
     name: 'Default',
 
-    inject: ['errorHandler', 'route'],
+    inject: ['errorHandler', 'route', 'toastr'],
 
     computed: {
         ...mapState(['meta', 'appState']),
@@ -75,14 +75,14 @@ export default {
         startImpersonating(id) {
             axios.get(this.route('core.impersonate.start', id))
                 .then(({ data }) => {
-                    this.$toastr.warning(data.message);
+                    this.toastr.warning(data.message);
                     this.loadAppState();
                 }).catch(this.errorHandler);
         },
         stopImpersonating() {
             axios.get(this.route('core.impersonate.stop'))
                 .then(({ data }) => {
-                    this.$toastr.info(data.message);
+                    this.toastr.info(data.message);
                     this.loadAppState();
                 }).catch(this.errorHandler);
         },
diff --git a/node_modules/@enso-ui/ui/src/modules/plugins/toastr.js b/node_modules/@enso-ui/ui/src/modules/plugins/toastr.js
index dc5f2d5..85339e8 100644
--- a/node_modules/@enso-ui/ui/src/modules/plugins/toastr.js
+++ b/node_modules/@enso-ui/ui/src/modules/plugins/toastr.js
@@ -1,10 +1,4 @@
 import Vue from 'vue';
-import Toastr from '@enso-ui/toastr/bulma';
-import ToastrPlugin from '@enso-ui/toastr';
+import toastr from '@enso-ui/toastr';
 
-Vue.use(ToastrPlugin, {
-    layout: Toastr,
-    options: {
-        duration: 3500,
-    },
-});
+Vue.prototype.$toastr = toastr;
diff --git a/node_modules/@enso-ui/ui/src/modules/store.js b/node_modules/@enso-ui/ui/src/modules/store.js
index 4cfa90d..64a927d 100644
--- a/node_modules/@enso-ui/ui/src/modules/store.js
+++ b/node_modules/@enso-ui/ui/src/modules/store.js
@@ -1,6 +1,6 @@
 import Vue from 'vue';
 import { init as sentryInit } from '@sentry/browser';
-import { Vue as sentryVue } from '@sentry/integrations';
+import { Vue as SentryVue } from '@sentry/integrations';
 import router from '@root/router';
 import localState from '@root/localState';
 import storeImporter from './importers/storeImporter';
@@ -24,6 +24,7 @@ const coreState = {
 
 const coreGetters = {
     routes: state => Object.keys(state.routes),
+    isWebview: () => typeof ReactNativeWebView !== 'undefined',
     requests: state => state.requests.length,
     requestIndex: state => ({ url, method }) => state.requests
         .findIndex(request => method === request.method && url === request.url),
@@ -58,9 +59,9 @@ const coreMutations = {
 };
 
 const coreActions = {
-    setPageTitle({ commit }, { route, title }) {
+    setPageTitle({ commit }, title) {
         commit('setPageTitle', title);
-        commit('bookmarks/title', { route, title });
+        commit('bookmarks/title', title);
     },
     loadGuestState({ commit }) {
         axios.get('/api/meta', {
@@ -98,7 +99,7 @@ const coreActions = {
             if (data.meta.sentryDsn) {
                 sentryInit({
                     dsn: data.meta.sentryDsn,
-                    integrations: [new sentryVue({ Vue, logErrors: true })],
+                    integrations: [new SentryVue({ Vue, logErrors: true })],
                 });
             }
 
diff --git a/node_modules/@enso-ui/ui/src/modules/store/auth.js b/node_modules/@enso-ui/ui/src/modules/store/auth.js
index 02040ac..1f7e079 100644
--- a/node_modules/@enso-ui/ui/src/modules/store/auth.js
+++ b/node_modules/@enso-ui/ui/src/modules/store/auth.js
@@ -14,6 +14,7 @@ export const mutations = {
     logout(state) {
         state.isAuth = false;
         localStorage.setItem('isAuth', false);
+        localStorage.removeItem('authorization');
     },
     setIntendedRoute: (state, value) => (state.intendedRoute = value),
     setIntendedPath: (state, value) => (state.intendedPath = value),
diff --git a/node_modules/@enso-ui/ui/src/modules/store/bookmarks.js b/node_modules/@enso-ui/ui/src/modules/store/bookmarks.js
index da4e270..fae126e 100644
--- a/node_modules/@enso-ui/ui/src/modules/store/bookmarks.js
+++ b/node_modules/@enso-ui/ui/src/modules/store/bookmarks.js
@@ -14,11 +14,11 @@ export const getters = {
     stickies: state => stickies(state.bookmarks),
     index: state => bookmark => index(state.bookmarks, bookmark),
     state: state => bookmark => state.bookmarks[index(state.bookmarks, bookmark)].state,
-    sticky: (state, getters) => bookmark => state.bookmarks[index(state.bookmarks, bookmark)].sticky,
+    sticky: state => bookmark => state.bookmarks[index(state.bookmarks, bookmark)].sticky,
 };
 
 export const mutations = {
-    init: (state) => {
+    init: state => {
         const bookmarks = localStorage.getItem('bookmarks');
         state.bookmarks = bookmarks && JSON.parse(bookmarks) || [];
     },
@@ -28,8 +28,8 @@ export const mutations = {
         current.state = data;
         persist(state.bookmarks);
     },
-    title: (state, { route, title }) => {
-        const current = state.bookmarks[index(state.bookmarks, route)];
+    title: (state, title) => {
+        const current = state.bookmarks[index(state.bookmarks, state.route)];
         current.meta.title = title;
         persist(state.bookmarks);
     },
@@ -55,7 +55,7 @@ export const mutations = {
         state.bookmarks = [bookmark];
         persist(state.bookmarks);
     },
-    empty: (state) => {
+    empty: state => {
         state.bookmarks = [];
         persist(state.bookmarks);
     },
diff --git a/node_modules/@enso-ui/ui/src/modules/store/preferences.js b/node_modules/@enso-ui/ui/src/modules/store/preferences.js
index 3318647..2cd4018 100644
--- a/node_modules/@enso-ui/ui/src/modules/store/preferences.js
+++ b/node_modules/@enso-ui/ui/src/modules/store/preferences.js
@@ -9,8 +9,6 @@ const store = payload => axios.patch(route('core.preferences.store'), payload);
 
 const updateGlobal = () => store({ global: state.global });
 
-const updateLocal = payload => store({ route: payload.route, value: payload.value });
-
 export const getters = {
     global: state => state.global,
     local: state => route => state.local[route],
@@ -32,7 +30,7 @@ export const mutations = {
     toastrPosition: (state, position) => (state.global.toastrPosition = position),
     expandedSidebar: (state, expandedSidebar) => (state.global.expandedSidebar = expandedSidebar),
     bookmarks: (state, bookmarks) => (state.global.bookmarks = bookmarks),
-    local: (state, payload) => (state.local[payload.route] = payload.value),
+    local: (state, value) => (state.local[state.route.name] = value),
 };
 
 export const actions = {
@@ -40,11 +38,13 @@ export const actions = {
         commit('global', payload);
         updateGlobal();
     },
-    setLocal: ({ commit }, payload) => {
-        commit('local', payload);
-        updateLocal(payload);
+    setLocal: ({ commit, state }, value) => {
+        commit('local', value);
+        store({ route: state.route.name, value });
     },
-    setLang: ({ commit, dispatch, getters, rootGetters }, lang) => {
+    setLang: ({
+        commit, dispatch, getters, rootGetters,
+    }, lang) => {
         const isRtl = rootGetters['localisation/rtl'];
         commit('lang', lang);
         localStorage.setItem('locale', lang);
diff --git a/node_modules/@enso-ui/ui/src/modules/store/websockets.js b/node_modules/@enso-ui/ui/src/modules/store/websockets.js
index 6bf8a0d..53614ab 100644
--- a/node_modules/@enso-ui/ui/src/modules/store/websockets.js
+++ b/node_modules/@enso-ui/ui/src/modules/store/websockets.js
@@ -1,4 +1,5 @@
 import Echo from 'laravel-echo';
+import Pusher from 'pusher-js';
 
 export const state = {
     channels: {
@@ -20,7 +21,10 @@ export const mutations = {
         state.channels = config.channels;
         state.pusher = config.pusher;
     },
-    connect: (state) => {
+};
+
+export const actions = {
+    connect: ({ state }) => {
         if (!window.Echo) {
             window.Echo = new Echo({
                 broadcaster: 'pusher',
@@ -29,7 +33,8 @@ export const mutations = {
                 useTLS: state.pusher.options.useTLS,
                 namespace: 'App.Events',
             });
+
+            window.Echo.connector.pusher.config.authEndpoint = `/api/broadcasting/auth`;
         }
     },
 };
-
